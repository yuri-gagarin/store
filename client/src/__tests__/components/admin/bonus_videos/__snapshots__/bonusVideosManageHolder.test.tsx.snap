// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BonusVideo Manage Holder Tests Default Component state at first render Should correctly render 1`] = `
<withRouter(BonusVideosManageHolder)>
  <BonusVideosManageHolder
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/admin/home/my_bonus_videos/manage",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/admin/home/my_bonus_videos/manage",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/admin/home/my_bonus_videos/manage",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": false,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <LoaderExampleText>
      <div
        id="generalLoadingScreen"
        style={
          Object {
            "height": "100vh",
          }
        }
      >
        <Segment
          style={
            Object {
              "height": "100vh",
            }
          }
        >
          <div
            className="ui segment"
            style={
              Object {
                "height": "100vh",
              }
            }
          >
            <Dimmer
              active={true}
              inverted={true}
            >
              <DimmerInner
                active={true}
                inverted={true}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": null,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": null,
                      }
                    }
                  >
                    <div
                      className="ui active transition visible inverted dimmer"
                      onClick={[Function]}
                    >
                      <div
                        className="content"
                      >
                        <Loader>
                          <div
                            className="ui text loader"
                          >
                            Please Wait
                          </div>
                        </Loader>
                      </div>
                    </div>
                  </RefFindNode>
                </Ref>
              </DimmerInner>
            </Dimmer>
          </div>
        </Segment>
      </div>
    </LoaderExampleText>
  </BonusVideosManageHolder>
</withRouter(BonusVideosManageHolder)>
`;

exports[`BonusVideo Manage Holder Tests State after a successful API call Should render the correct BonusVideoManageHolder Component 1`] = `
<withRouter(BonusVideosManageHolder)>
  <BonusVideosManageHolder
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/admin/home/my_bonus_videos/manage",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/admin/home/my_bonus_videos/manage",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/admin/home/my_bonus_videos/manage",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": false,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <Grid
      columns={2}
      padded={true}
      stackable={true}
    >
      <div
        className="ui stackable padded two column grid"
      >
        <Route
          path="/admin/home/my_bonus_videos/manage/edit"
        />
        <Route
          exact={true}
          path="/admin/home/my_bonus_videos/manage"
        >
          <GridRow>
            <div
              className="row"
            >
              <GridColumn
                computer={12}
                mobile={16}
                tablet={8}
              >
                <div
                  className="twelve wide computer sixteen wide mobile eight wide tablet column"
                >
                  <withRouter(BonusVideoCard)
                    bonusVideo={
                      Object {
                        "_id": "1",
                        "createdAt": "1111",
                        "description": "Something",
                        "vimeoURL": "url",
                        "youTubeURL": "url",
                      }
                    }
                    dispatch={[Function]}
                    key="1"
                    state={
                      Object {
                        "bonusVideoState": Object {
                          "bonusVideoFormOpen": false,
                          "currentBonusVideoData": Object {
                            "_id": "",
                            "createdAt": "",
                            "description": "",
                            "vimeoURL": "",
                            "youTubeURL": "",
                          },
                          "error": null,
                          "loadedBonusVideos": Array [
                            Object {
                              "_id": "1",
                              "createdAt": "1111",
                              "description": "Something",
                              "vimeoURL": "url",
                              "youTubeURL": "url",
                            },
                          ],
                          "loading": false,
                          "responseMsg": "All Ok",
                        },
                        "productState": Object {
                          "currentProductData": Object {
                            "_id": "",
                            "createdAt": "",
                            "description": "",
                            "details": "",
                            "images": Array [],
                            "name": "",
                            "price": "",
                          },
                          "error": null,
                          "loadedProducts": Array [],
                          "loading": false,
                          "productFormOpen": false,
                          "responseMsg": "",
                        },
                        "serviceState": Object {
                          "currentServiceData": Object {
                            "_id": "",
                            "createdAt": "",
                            "description": "",
                            "images": Array [],
                            "name": "",
                            "price": "",
                          },
                          "error": null,
                          "loadedServices": Array [],
                          "loading": false,
                          "responseMsg": "",
                          "serviceFormOpen": false,
                        },
                        "storeItemState": Object {
                          "currentStoreItemData": Object {
                            "_id": "",
                            "categories": Array [],
                            "createdAt": "",
                            "description": "",
                            "details": "",
                            "images": Array [],
                            "name": "",
                            "price": "",
                            "storeId": "",
                            "storeName": "",
                          },
                          "error": null,
                          "loadedStoreItems": Array [],
                          "loading": false,
                          "numberOfItems": 0,
                          "responseMsg": "",
                          "storeItemFormOpen": false,
                        },
                        "storeState": Object {
                          "currentStoreData": Object {
                            "_id": "",
                            "createdAt": "",
                            "description": "",
                            "images": Array [],
                            "title": "",
                          },
                          "error": null,
                          "loadedStores": Array [],
                          "loading": false,
                          "responseMsg": "",
                          "storeFormOpen": false,
                        },
                      }
                    }
                  >
                    <BonusVideoCard
                      bonusVideo={
                        Object {
                          "_id": "1",
                          "createdAt": "1111",
                          "description": "Something",
                          "vimeoURL": "url",
                          "youTubeURL": "url",
                        }
                      }
                      dispatch={[Function]}
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "canGo": [Function],
                          "createHref": [Function],
                          "entries": Array [
                            Object {
                              "hash": "",
                              "pathname": "/admin/home/my_bonus_videos/manage",
                              "search": "",
                              "state": undefined,
                            },
                          ],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "index": 0,
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/admin/home/my_bonus_videos/manage",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/admin/home/my_bonus_videos/manage",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/admin/home/my_bonus_videos/manage",
                          "url": "/admin/home/my_bonus_videos/manage",
                        }
                      }
                      state={
                        Object {
                          "bonusVideoState": Object {
                            "bonusVideoFormOpen": false,
                            "currentBonusVideoData": Object {
                              "_id": "",
                              "createdAt": "",
                              "description": "",
                              "vimeoURL": "",
                              "youTubeURL": "",
                            },
                            "error": null,
                            "loadedBonusVideos": Array [
                              Object {
                                "_id": "1",
                                "createdAt": "1111",
                                "description": "Something",
                                "vimeoURL": "url",
                                "youTubeURL": "url",
                              },
                            ],
                            "loading": false,
                            "responseMsg": "All Ok",
                          },
                          "productState": Object {
                            "currentProductData": Object {
                              "_id": "",
                              "createdAt": "",
                              "description": "",
                              "details": "",
                              "images": Array [],
                              "name": "",
                              "price": "",
                            },
                            "error": null,
                            "loadedProducts": Array [],
                            "loading": false,
                            "productFormOpen": false,
                            "responseMsg": "",
                          },
                          "serviceState": Object {
                            "currentServiceData": Object {
                              "_id": "",
                              "createdAt": "",
                              "description": "",
                              "images": Array [],
                              "name": "",
                              "price": "",
                            },
                            "error": null,
                            "loadedServices": Array [],
                            "loading": false,
                            "responseMsg": "",
                            "serviceFormOpen": false,
                          },
                          "storeItemState": Object {
                            "currentStoreItemData": Object {
                              "_id": "",
                              "categories": Array [],
                              "createdAt": "",
                              "description": "",
                              "details": "",
                              "images": Array [],
                              "name": "",
                              "price": "",
                              "storeId": "",
                              "storeName": "",
                            },
                            "error": null,
                            "loadedStoreItems": Array [],
                            "loading": false,
                            "numberOfItems": 0,
                            "responseMsg": "",
                            "storeItemFormOpen": false,
                          },
                          "storeState": Object {
                            "currentStoreData": Object {
                              "_id": "",
                              "createdAt": "",
                              "description": "",
                              "images": Array [],
                              "title": "",
                            },
                            "error": null,
                            "loadedStores": Array [],
                            "loading": false,
                            "responseMsg": "",
                            "storeFormOpen": false,
                          },
                        }
                      }
                    >
                      <GridRow
                        style={
                          Object {
                            "marginTop": "1em",
                            "padding": "0.5em",
                          }
                        }
                      >
                        <div
                          className="row"
                          style={
                            Object {
                              "marginTop": "1em",
                              "padding": "0.5em",
                            }
                          }
                        >
                          <div
                            className="bonusVideoManageDesc"
                          >
                            <p>
                              <strong>
                                Description:
                              </strong>
                               
                              Something
                               
                            </p>
                            <p>
                              <strong>
                                YouTube URL:
                              </strong>
                               
                              url
                               
                            </p>
                            <p>
                              <strong>
                                Vimeo URL:
                              </strong>
                               
                              url
                               
                            </p>
                            <p>
                              <span>
                                Uploaded At: 
                              </span>
                              1111-Jan-1
                            </p>
                          </div>
                          <div
                            className="bonusVideoManageCtrls"
                          >
                            <Button
                              as="button"
                              className="bonusVideoCardBtn"
                              color="green"
                              content="Open"
                              inverted={true}
                              onClick={[Function]}
                            >
                              <Ref
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui green inverted button bonusVideoCardBtn"
                                    >
                                      Open
                                    </button>,
                                  }
                                }
                              >
                                <RefFindNode
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui green inverted button bonusVideoCardBtn"
                                      >
                                        Open
                                      </button>,
                                    }
                                  }
                                >
                                  <button
                                    className="ui green inverted button bonusVideoCardBtn"
                                    onClick={[Function]}
                                  >
                                    Open
                                  </button>
                                </RefFindNode>
                              </Ref>
                            </Button>
                            <Button
                              as="button"
                              className="bonusVideoCardBtn"
                              color="orange"
                              content="Edit"
                              inverted={true}
                              onClick={[Function]}
                            >
                              <Ref
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui orange inverted button bonusVideoCardBtn"
                                    >
                                      Edit
                                    </button>,
                                  }
                                }
                              >
                                <RefFindNode
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui orange inverted button bonusVideoCardBtn"
                                      >
                                        Edit
                                      </button>,
                                    }
                                  }
                                >
                                  <button
                                    className="ui orange inverted button bonusVideoCardBtn"
                                    onClick={[Function]}
                                  >
                                    Edit
                                  </button>
                                </RefFindNode>
                              </Ref>
                            </Button>
                            <Button
                              as="button"
                              className="bonusVideoCardBtn"
                              color="red"
                              content="Delete"
                              inverted={true}
                              onClick={[Function]}
                            >
                              <Ref
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui red inverted button bonusVideoCardBtn"
                                    >
                                      Delete
                                    </button>,
                                  }
                                }
                              >
                                <RefFindNode
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui red inverted button bonusVideoCardBtn"
                                      >
                                        Delete
                                      </button>,
                                    }
                                  }
                                >
                                  <button
                                    className="ui red inverted button bonusVideoCardBtn"
                                    onClick={[Function]}
                                  >
                                    Delete
                                  </button>
                                </RefFindNode>
                              </Ref>
                            </Button>
                          </div>
                        </div>
                      </GridRow>
                    </BonusVideoCard>
                  </withRouter(BonusVideoCard)>
                </div>
              </GridColumn>
              <GridColumn
                computer={4}
                mobile={16}
                tablet={8}
              >
                <div
                  className="four wide computer sixteen wide mobile eight wide tablet column"
                />
              </GridColumn>
            </div>
          </GridRow>
        </Route>
      </div>
    </Grid>
  </BonusVideosManageHolder>
</withRouter(BonusVideosManageHolder)>
`;
