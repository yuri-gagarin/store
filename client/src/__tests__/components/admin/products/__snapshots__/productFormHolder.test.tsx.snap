// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductFormHolder Component tests Default Form Holder state Should Properly Mount Form Holder 1`] = `
<withRouter(ProductFormHolder)>
  <ProductFormHolder
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="productFormHolder"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Open Form"
                id="productFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="productFormToggleBtn"
                      >
                        Open Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="productFormToggleBtn"
                        >
                          Open Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="productFormToggleBtn"
                      onClick={[Function]}
                    >
                      Open Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ProductFormHolder>
</withRouter(ProductFormHolder)>
`;

exports[`ProductFormHolder Component tests Form Holder state OPEN - NO Current Product Data Should Properly Mount Form Holder, respond to '#productToggleBtn' click 1`] = `
<withRouter(ProductFormHolder)>
  <ProductFormHolder
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="productFormHolder"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Close Form"
                id="productFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="productFormToggleBtn"
                      >
                        Close Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="productFormToggleBtn"
                        >
                          Close Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="productFormToggleBtn"
                      onClick={[Function]}
                    >
                      Close Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
              <ProductForm
                description=""
                details=""
                handleCreateProduct={[Function]}
                handleUpdateProduct={[Function]}
                name=""
                newForm={true}
                price=""
              >
                <div
                  className="productFormDiv"
                >
                  <Form
                    as="form"
                    id="productForm"
                  >
                    <form
                      className="ui form"
                      id="productForm"
                      onSubmit={[Function]}
                    >
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Product name
                          </label>
                          <input
                            id="productFormNameInput"
                            onChange={[Function]}
                            placeholder="Product name here ..."
                            value=""
                          />
                        </div>
                      </FormField>
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Product price
                          </label>
                          <input
                            id="productFormPriceInput"
                            onChange={[Function]}
                            placeholder="Product price here..."
                            value=""
                          />
                        </div>
                      </FormField>
                      <FormField
                        control={[Function]}
                        id="productFormDescInput"
                        label="Product Description"
                        onChange={[Function]}
                        placeholder="Product description here..."
                        value=""
                      >
                        <div
                          className="field"
                        >
                          <label
                            htmlFor="productFormDescInput"
                          >
                            Product Description
                          </label>
                          <TextArea
                            aria-describedby={null}
                            as="textarea"
                            id="productFormDescInput"
                            onChange={[Function]}
                            placeholder="Product description here..."
                            rows={3}
                            value=""
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <textarea
                                    id="productFormDescInput"
                                    placeholder="Product description here..."
                                    rows="3"
                                  />,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <textarea
                                      id="productFormDescInput"
                                      placeholder="Product description here..."
                                      rows="3"
                                    />,
                                  }
                                }
                              >
                                <textarea
                                  aria-describedby={null}
                                  id="productFormDescInput"
                                  onChange={[Function]}
                                  onInput={[Function]}
                                  placeholder="Product description here..."
                                  rows={3}
                                  value=""
                                />
                              </RefFindNode>
                            </Ref>
                          </TextArea>
                        </div>
                      </FormField>
                      <FormField
                        control={[Function]}
                        id="productFormDetailsInput"
                        label="Product Details"
                        onChange={[Function]}
                        placeholder="Product details here..."
                        value=""
                      >
                        <div
                          className="field"
                        >
                          <label
                            htmlFor="productFormDetailsInput"
                          >
                            Product Details
                          </label>
                          <TextArea
                            aria-describedby={null}
                            as="textarea"
                            id="productFormDetailsInput"
                            onChange={[Function]}
                            placeholder="Product details here..."
                            rows={3}
                            value=""
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <textarea
                                    id="productFormDetailsInput"
                                    placeholder="Product details here..."
                                    rows="3"
                                  />,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <textarea
                                      id="productFormDetailsInput"
                                      placeholder="Product details here..."
                                      rows="3"
                                    />,
                                  }
                                }
                              >
                                <textarea
                                  aria-describedby={null}
                                  id="productFormDetailsInput"
                                  onChange={[Function]}
                                  onInput={[Function]}
                                  placeholder="Product details here..."
                                  rows={3}
                                  value=""
                                />
                              </RefFindNode>
                            </Ref>
                          </TextArea>
                        </div>
                      </FormField>
                      <Button
                        as="button"
                        content="Create  New Product"
                        id="adminProductFormCreate"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Ref
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                                id="adminProductFormCreate"
                                type="submit"
                              >
                                Create  New Product
                              </button>,
                            }
                          }
                        >
                          <RefFindNode
                            innerRef={
                              Object {
                                "current": <button
                                  class="ui button"
                                  id="adminProductFormCreate"
                                  type="submit"
                                >
                                  Create  New Product
                                </button>,
                              }
                            }
                          >
                            <button
                              className="ui button"
                              id="adminProductFormCreate"
                              onClick={[Function]}
                              type="submit"
                            >
                              Create  New Product
                            </button>
                          </RefFindNode>
                        </Ref>
                      </Button>
                    </form>
                  </Form>
                </div>
              </ProductForm>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ProductFormHolder>
</withRouter(ProductFormHolder)>
`;
