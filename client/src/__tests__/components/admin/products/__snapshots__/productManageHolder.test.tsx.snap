// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Product Manage Holder Tests Default Component state at first render Should correctly render 1`] = `
<MemoryRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "q8pk0y",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "q8pk0y",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Component>
      <withRouter(ProductsManageHolder)>
        <ProductsManageHolder
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "q8pk0y",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "q8pk0y",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "q8pk0y",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <LoaderExampleText>
            <div
              style={
                Object {
                  "height": "100vh",
                }
              }
            >
              <Segment
                style={
                  Object {
                    "height": "100vh",
                  }
                }
              >
                <div
                  className="ui segment"
                  style={
                    Object {
                      "height": "100vh",
                    }
                  }
                >
                  <Dimmer
                    active={true}
                    inverted={true}
                  >
                    <DimmerInner
                      active={true}
                      inverted={true}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": null,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": null,
                            }
                          }
                        >
                          <div
                            className="ui active transition visible inverted dimmer"
                            onClick={[Function]}
                          >
                            <div
                              className="content"
                            >
                              <Loader>
                                <div
                                  className="ui text loader"
                                >
                                  Please Wait
                                </div>
                              </Loader>
                            </div>
                          </div>
                        </RefFindNode>
                      </Ref>
                    </DimmerInner>
                  </Dimmer>
                </div>
              </Segment>
            </div>
          </LoaderExampleText>
        </ProductsManageHolder>
      </withRouter(ProductsManageHolder)>
    </Component>
  </Router>
</MemoryRouter>
`;

exports[`Product Manage Holder Tests State after a successful API call Should render the correct ProductManageHolder Component 1`] = `null`;
