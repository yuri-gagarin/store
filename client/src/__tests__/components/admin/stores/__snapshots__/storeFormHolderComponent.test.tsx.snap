// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StoreFormHolder Component tests Default Form Holder state Should Properly Mount Form Holder 1`] = `
<withRouter(StoreFormHolder)>
  <StoreFormHolder
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="storeFormHolder"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Open Form"
                id="adminStoreFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="adminStoreFormToggleBtn"
                      >
                        Open Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="adminStoreFormToggleBtn"
                        >
                          Open Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="adminStoreFormToggleBtn"
                      onClick={[Function]}
                    >
                      Open Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </StoreFormHolder>
</withRouter(StoreFormHolder)>
`;

exports[`StoreFormHolder Component tests Form Holder state OPEN - NO Current Store Data Should Properly Mount Form Holder, respond to '#storeToggleBtn' click 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Component>
      <withRouter(StoreFormHolder)>
        <StoreFormHolder
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <div
            id="storeFormHolder"
          >
            <GridRow>
              <div
                className="row"
              >
                <GridColumn
                  computer={14}
                  mobile={16}
                  tablet={15}
                >
                  <div
                    className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
                  >
                    <Button
                      as="button"
                      content="Close Form"
                      id="adminStoreFormToggleBtn"
                      onClick={[Function]}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": <button
                              class="ui button"
                              id="adminStoreFormToggleBtn"
                            >
                              Close Form
                            </button>,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                                id="adminStoreFormToggleBtn"
                              >
                                Close Form
                              </button>,
                            }
                          }
                        >
                          <button
                            className="ui button"
                            id="adminStoreFormToggleBtn"
                            onClick={[Function]}
                          >
                            Close Form
                          </button>
                        </RefFindNode>
                      </Ref>
                    </Button>
                    <StoreForm
                      description=""
                      handleCreateStore={[Function]}
                      handleUpdateStore={[Function]}
                      newForm={true}
                      title=""
                    >
                      <div
                        id="createStoreFormHolder"
                      >
                        <Form
                          as="form"
                          id="createStoreForm"
                        >
                          <form
                            className="ui form"
                            id="createStoreForm"
                            onSubmit={[Function]}
                          >
                            <FormField>
                              <div
                                className="field"
                              >
                                <label>
                                  Store title
                                </label>
                                <input
                                  id="adminStoreFormTitleInput"
                                  onChange={[Function]}
                                  placeholder="Store title here ..."
                                  value=""
                                />
                              </div>
                            </FormField>
                            <FormField
                              control={[Function]}
                              id="adminStoreFormDescInput"
                              label="Store Description"
                              onChange={[Function]}
                              placeholder="Store description here..."
                              value=""
                            >
                              <div
                                className="field"
                              >
                                <label
                                  htmlFor="adminStoreFormDescInput"
                                >
                                  Store Description
                                </label>
                                <TextArea
                                  aria-describedby={null}
                                  as="textarea"
                                  id="adminStoreFormDescInput"
                                  onChange={[Function]}
                                  placeholder="Store description here..."
                                  rows={3}
                                  value=""
                                >
                                  <Ref
                                    innerRef={
                                      Object {
                                        "current": <textarea
                                          id="adminStoreFormDescInput"
                                          placeholder="Store description here..."
                                          rows="3"
                                        />,
                                      }
                                    }
                                  >
                                    <RefFindNode
                                      innerRef={
                                        Object {
                                          "current": <textarea
                                            id="adminStoreFormDescInput"
                                            placeholder="Store description here..."
                                            rows="3"
                                          />,
                                        }
                                      }
                                    >
                                      <textarea
                                        aria-describedby={null}
                                        id="adminStoreFormDescInput"
                                        onChange={[Function]}
                                        onInput={[Function]}
                                        placeholder="Store description here..."
                                        rows={3}
                                        value=""
                                      />
                                    </RefFindNode>
                                  </Ref>
                                </TextArea>
                              </div>
                            </FormField>
                            <Button
                              as="button"
                              content="Create Store"
                              id="adminStoreFormCreateBtn"
                              onClick={[Function]}
                              type="submit"
                            >
                              <Ref
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui button"
                                      id="adminStoreFormCreateBtn"
                                      type="submit"
                                    >
                                      Create Store
                                    </button>,
                                  }
                                }
                              >
                                <RefFindNode
                                  innerRef={
                                    Object {
                                      "current": <button
                                        class="ui button"
                                        id="adminStoreFormCreateBtn"
                                        type="submit"
                                      >
                                        Create Store
                                      </button>,
                                    }
                                  }
                                >
                                  <button
                                    className="ui button"
                                    id="adminStoreFormCreateBtn"
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    Create Store
                                  </button>
                                </RefFindNode>
                              </Ref>
                            </Button>
                          </form>
                        </Form>
                      </div>
                    </StoreForm>
                  </div>
                </GridColumn>
              </div>
            </GridRow>
          </div>
        </StoreFormHolder>
      </withRouter(StoreFormHolder)>
    </Component>
  </Router>
</MemoryRouter>
`;
