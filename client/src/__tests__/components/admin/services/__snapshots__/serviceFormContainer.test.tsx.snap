// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServiceFormContainer Component tests 'ServiceFormContainer' 'ServiceForm' OPEN - WITH Current Service Data - NO IMAGES Should properly render 'ServiceFormContainer' component 1`] = `
<withRouter(ServiceFormContainer)>
  <ServiceFormContainer
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="serviceFormContainer"
    >
      <GridRow
        id="adminServiceFormContainerDetails"
      >
        <div
          className="row"
          id="adminServiceFormContainerDetails"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={14}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fourteen wide tablet column"
            >
              <h1>
                Details
              </h1>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service name:
                </h3>
                <p>
                  name
                </p>
              </div>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service price:
                </h3>
                <p>
                  100
                </p>
              </div>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service description:
                </h3>
                <p>
                  description
                </p>
              </div>
              <div
                className="serviceFormContainerTimestamps"
              >
                <span>
                  Created At: 
                  <strong>
                    2019-Jan-1
                  </strong>
                </span>
                <span>
                  Edited At: 
                  <strong>
                    Not Available
                  </strong>
                </span>
              </div>
            </div>
          </GridColumn>
        </div>
      </GridRow>
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={14}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fourteen wide tablet column"
            >
              <ServiceImgPreviewContainer
                dispatch={[Function]}
                state={
                  Object {
                    "bonusVideoState": Object {
                      "bonusVideoFormOpen": false,
                      "currentBonusVideoData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "vimeoURL": "",
                        "youTubeURL": "",
                      },
                      "error": null,
                      "loadedBonusVideos": Array [],
                      "loading": false,
                      "responseMsg": "",
                    },
                    "productState": Object {
                      "currentProductData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "details": "",
                        "images": Array [],
                        "name": "",
                        "price": "",
                      },
                      "error": null,
                      "loadedProducts": Array [],
                      "loading": false,
                      "productFormOpen": false,
                      "responseMsg": "",
                    },
                    "serviceState": Object {
                      "currentServiceData": Object {
                        "_id": "1",
                        "createdAt": "Tue Jan 01 2019 00:00:00 GMT+0200 (Eastern European Standard Time)",
                        "description": "description",
                        "images": Array [],
                        "name": "name",
                        "price": "100",
                      },
                      "error": null,
                      "loadedServices": Array [],
                      "loading": false,
                      "responseMsg": "",
                      "serviceFormOpen": true,
                    },
                    "storeItemState": Object {
                      "currentStoreItemData": Object {
                        "_id": "",
                        "categories": Array [],
                        "createdAt": "",
                        "description": "",
                        "details": "",
                        "images": Array [],
                        "name": "",
                        "price": "",
                        "storeId": "",
                        "storeName": "",
                      },
                      "error": null,
                      "loadedStoreItems": Array [],
                      "loading": false,
                      "numberOfItems": 0,
                      "responseMsg": "",
                      "storeItemFormOpen": false,
                    },
                    "storeState": Object {
                      "currentStoreData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "images": Array [],
                        "title": "",
                      },
                      "error": null,
                      "loadedStores": Array [],
                      "loading": false,
                      "responseMsg": "",
                      "storeFormOpen": false,
                    },
                  }
                }
              >
                <div
                  id="serviceImgPreviewNone"
                >
                  <h3>
                    No images uploaded... you should upload some... 
                  </h3>
                </div>
              </ServiceImgPreviewContainer>
            </div>
          </GridColumn>
        </div>
      </GridRow>
      <ServiceImageUplForm>
        <div
          id="serviceImgUplFormHolder"
        >
          <div>
            <p>
              Image Uploader
            </p>
          </div>
          <Form
            as="form"
            id="serviceImgUploadForm"
          >
            <form
              className="ui form"
              id="serviceImgUploadForm"
              onSubmit={[Function]}
            >
              <div
                id="serviceImgInputControlls"
              >
                <Button
                  as="label"
                  content="Choose Image"
                  htmlFor="serviceImgFile"
                  icon="file"
                  id="serviceImgSelectBtn"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <label
                          class="ui icon left labeled button"
                          for="serviceImgFile"
                          id="serviceImgSelectBtn"
                          role="button"
                        >
                          <i
                            aria-hidden="true"
                            class="file icon"
                          />
                          Choose Image
                        </label>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <label
                            class="ui icon left labeled button"
                            for="serviceImgFile"
                            id="serviceImgSelectBtn"
                            role="button"
                          >
                            <i
                              aria-hidden="true"
                              class="file icon"
                            />
                            Choose Image
                          </label>,
                        }
                      }
                    >
                      <label
                        className="ui icon left labeled button"
                        htmlFor="serviceImgFile"
                        id="serviceImgSelectBtn"
                        onClick={[Function]}
                        role="button"
                      >
                        <Icon
                          as="i"
                          name="file"
                        >
                          <i
                            aria-hidden="true"
                            className="file icon"
                            onClick={[Function]}
                          />
                        </Icon>
                        Choose Image
                      </label>
                    </RefFindNode>
                  </Ref>
                </Button>
                <input
                  hidden={true}
                  id="serviceImgFile"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <span>
                No File
              </span>
            </form>
          </Form>
        </div>
      </ServiceImageUplForm>
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Close Form"
                id="adminServiceFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="adminServiceFormToggleBtn"
                      >
                        Close Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="adminServiceFormToggleBtn"
                        >
                          Close Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="adminServiceFormToggleBtn"
                      onClick={[Function]}
                    >
                      Close Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
              <ServiceForm
                description="description"
                handleCreateService={[Function]}
                handleUpdateService={[Function]}
                name="name"
                newForm={false}
                price="100"
              >
                <div
                  className="serviceFormDiv"
                >
                  <Form
                    as="form"
                    id="serviceForm"
                  >
                    <form
                      className="ui form"
                      id="serviceForm"
                      onSubmit={[Function]}
                    >
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service name
                          </label>
                          <input
                            id="adminServiceFormNameInput"
                            onChange={[Function]}
                            placeholder="Service name here ..."
                            value="name"
                          />
                        </div>
                      </FormField>
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service price
                          </label>
                          <input
                            id="adminServiceFormPriceInput"
                            onChange={[Function]}
                            placeholder="Service price here..."
                            value="100"
                          />
                        </div>
                      </FormField>
                      <FormField
                        control={[Function]}
                        id="adminServiceFormDescInput"
                        label="Store Description"
                        onChange={[Function]}
                        placeholder="Service description here..."
                        value="description"
                      >
                        <div
                          className="field"
                        >
                          <label
                            htmlFor="adminServiceFormDescInput"
                          >
                            Store Description
                          </label>
                          <TextArea
                            aria-describedby={null}
                            as="textarea"
                            id="adminServiceFormDescInput"
                            onChange={[Function]}
                            placeholder="Service description here..."
                            rows={3}
                            value="description"
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <textarea
                                    id="adminServiceFormDescInput"
                                    placeholder="Service description here..."
                                    rows="3"
                                  >
                                    description
                                  </textarea>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <textarea
                                      id="adminServiceFormDescInput"
                                      placeholder="Service description here..."
                                      rows="3"
                                    >
                                      description
                                    </textarea>,
                                  }
                                }
                              >
                                <textarea
                                  aria-describedby={null}
                                  id="adminServiceFormDescInput"
                                  onChange={[Function]}
                                  onInput={[Function]}
                                  placeholder="Service description here..."
                                  rows={3}
                                  value="description"
                                />
                              </RefFindNode>
                            </Ref>
                          </TextArea>
                        </div>
                      </FormField>
                      <Button
                        as="button"
                        content="Update Service"
                        id="adminServiceFormUpdateBtn"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Ref
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                                id="adminServiceFormUpdateBtn"
                                type="submit"
                              >
                                Update Service
                              </button>,
                            }
                          }
                        >
                          <RefFindNode
                            innerRef={
                              Object {
                                "current": <button
                                  class="ui button"
                                  id="adminServiceFormUpdateBtn"
                                  type="submit"
                                >
                                  Update Service
                                </button>,
                              }
                            }
                          >
                            <button
                              className="ui button"
                              id="adminServiceFormUpdateBtn"
                              onClick={[Function]}
                              type="submit"
                            >
                              Update Service
                            </button>
                          </RefFindNode>
                        </Ref>
                      </Button>
                    </form>
                  </Form>
                </div>
              </ServiceForm>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ServiceFormContainer>
</withRouter(ServiceFormContainer)>
`;

exports[`ServiceFormContainer Component tests 'ServiceFormContainer' with 'ServiceForm' OPEN - NO Current Service Data Should properly render FormContainer, respond to '#serviceToggleBtn' click 1`] = `
<withRouter(ServiceFormContainer)>
  <ServiceFormContainer
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="serviceFormContainer"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Close Form"
                id="adminServiceFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="adminServiceFormToggleBtn"
                      >
                        Close Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="adminServiceFormToggleBtn"
                        >
                          Close Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="adminServiceFormToggleBtn"
                      onClick={[Function]}
                    >
                      Close Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
              <ServiceForm
                description=""
                handleCreateService={[Function]}
                handleUpdateService={[Function]}
                name=""
                newForm={true}
                price=""
              >
                <div
                  className="serviceFormDiv"
                >
                  <Form
                    as="form"
                    id="serviceForm"
                  >
                    <form
                      className="ui form"
                      id="serviceForm"
                      onSubmit={[Function]}
                    >
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service name
                          </label>
                          <input
                            id="adminServiceFormNameInput"
                            onChange={[Function]}
                            placeholder="Service name here ..."
                            value=""
                          />
                        </div>
                      </FormField>
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service price
                          </label>
                          <input
                            id="adminServiceFormPriceInput"
                            onChange={[Function]}
                            placeholder="Service price here..."
                            value=""
                          />
                        </div>
                      </FormField>
                      <FormField
                        control={[Function]}
                        id="adminServiceFormDescInput"
                        label="Store Description"
                        onChange={[Function]}
                        placeholder="Service description here..."
                        value=""
                      >
                        <div
                          className="field"
                        >
                          <label
                            htmlFor="adminServiceFormDescInput"
                          >
                            Store Description
                          </label>
                          <TextArea
                            aria-describedby={null}
                            as="textarea"
                            id="adminServiceFormDescInput"
                            onChange={[Function]}
                            placeholder="Service description here..."
                            rows={3}
                            value=""
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <textarea
                                    id="adminServiceFormDescInput"
                                    placeholder="Service description here..."
                                    rows="3"
                                  />,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <textarea
                                      id="adminServiceFormDescInput"
                                      placeholder="Service description here..."
                                      rows="3"
                                    />,
                                  }
                                }
                              >
                                <textarea
                                  aria-describedby={null}
                                  id="adminServiceFormDescInput"
                                  onChange={[Function]}
                                  onInput={[Function]}
                                  placeholder="Service description here..."
                                  rows={3}
                                  value=""
                                />
                              </RefFindNode>
                            </Ref>
                          </TextArea>
                        </div>
                      </FormField>
                      <Button
                        as="button"
                        content="Create  New Service"
                        id="adminServiceFormCreateBtn"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Ref
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                                id="adminServiceFormCreateBtn"
                                type="submit"
                              >
                                Create  New Service
                              </button>,
                            }
                          }
                        >
                          <RefFindNode
                            innerRef={
                              Object {
                                "current": <button
                                  class="ui button"
                                  id="adminServiceFormCreateBtn"
                                  type="submit"
                                >
                                  Create  New Service
                                </button>,
                              }
                            }
                          >
                            <button
                              className="ui button"
                              id="adminServiceFormCreateBtn"
                              onClick={[Function]}
                              type="submit"
                            >
                              Create  New Service
                            </button>
                          </RefFindNode>
                        </Ref>
                      </Button>
                    </form>
                  </Form>
                </div>
              </ServiceForm>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ServiceFormContainer>
</withRouter(ServiceFormContainer)>
`;

exports[`ServiceFormContainer Component tests Default 'ServiceFormContainer' state Should properly mount 'ServiceFormContainer' 1`] = `
<withRouter(ServiceFormContainer)>
  <ServiceFormContainer
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="serviceFormContainer"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Open Form"
                id="adminServiceFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="adminServiceFormToggleBtn"
                      >
                        Open Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="adminServiceFormToggleBtn"
                        >
                          Open Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="adminServiceFormToggleBtn"
                      onClick={[Function]}
                    >
                      Open Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ServiceFormContainer>
</withRouter(ServiceFormContainer)>
`;

exports[`ServiceFormContainer Component tests Form Container state OPEN - WITH Current Service Data - WITH IMAGES Should properly mount the  'ServiceFormContainer' 1`] = `
<withRouter(ServiceFormContainer)>
  <ServiceFormContainer
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
  >
    <div
      id="serviceFormContainer"
    >
      <GridRow
        id="adminServiceFormContainerDetails"
      >
        <div
          className="row"
          id="adminServiceFormContainerDetails"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={14}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fourteen wide tablet column"
            >
              <h1>
                Details
              </h1>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service name:
                </h3>
                <p>
                  name
                </p>
              </div>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service price:
                </h3>
                <p>
                  100
                </p>
              </div>
              <div
                className="adminServiceFormContainerDetailsItem"
              >
                <h3>
                  Service description:
                </h3>
                <p>
                  description
                </p>
              </div>
              <div
                className="serviceFormContainerTimestamps"
              >
                <span>
                  Created At: 
                  <strong>
                    2019-Jan-1
                  </strong>
                </span>
                <span>
                  Edited At: 
                  <strong>
                    Not Available
                  </strong>
                </span>
              </div>
            </div>
          </GridColumn>
        </div>
      </GridRow>
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={14}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fourteen wide tablet column"
            >
              <ServiceImgPreviewContainer
                dispatch={[Function]}
                state={
                  Object {
                    "bonusVideoState": Object {
                      "bonusVideoFormOpen": false,
                      "currentBonusVideoData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "vimeoURL": "",
                        "youTubeURL": "",
                      },
                      "error": null,
                      "loadedBonusVideos": Array [],
                      "loading": false,
                      "responseMsg": "",
                    },
                    "productState": Object {
                      "currentProductData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "details": "",
                        "images": Array [],
                        "name": "",
                        "price": "",
                      },
                      "error": null,
                      "loadedProducts": Array [],
                      "loading": false,
                      "productFormOpen": false,
                      "responseMsg": "",
                    },
                    "serviceState": Object {
                      "currentServiceData": Object {
                        "_id": "1",
                        "createdAt": "Tue Jan 01 2019 00:00:00 GMT+0200 (Eastern European Standard Time)",
                        "description": "description",
                        "images": Array [
                          Object {
                            "_id": "1",
                            "absolutePath": "path",
                            "createdAt": "Tue Jan 01 2019 00:00:00 GMT+0200 (Eastern European Standard Time)",
                            "description": "desc",
                            "fileName": "img",
                            "imagePath": "imgPath",
                            "url": "url",
                          },
                          Object {
                            "_id": "2",
                            "absolutePath": "path",
                            "createdAt": "Tue Jan 01 2019 00:00:00 GMT+0200 (Eastern European Standard Time)",
                            "description": "desc",
                            "fileName": "img",
                            "imagePath": "imgPath",
                            "url": "url",
                          },
                        ],
                        "name": "name",
                        "price": "100",
                      },
                      "error": null,
                      "loadedServices": Array [],
                      "loading": false,
                      "responseMsg": "",
                      "serviceFormOpen": true,
                    },
                    "storeItemState": Object {
                      "currentStoreItemData": Object {
                        "_id": "",
                        "categories": Array [],
                        "createdAt": "",
                        "description": "",
                        "details": "",
                        "images": Array [],
                        "name": "",
                        "price": "",
                        "storeId": "",
                        "storeName": "",
                      },
                      "error": null,
                      "loadedStoreItems": Array [],
                      "loading": false,
                      "numberOfItems": 0,
                      "responseMsg": "",
                      "storeItemFormOpen": false,
                    },
                    "storeState": Object {
                      "currentStoreData": Object {
                        "_id": "",
                        "createdAt": "",
                        "description": "",
                        "images": Array [],
                        "title": "",
                      },
                      "error": null,
                      "loadedStores": Array [],
                      "loading": false,
                      "responseMsg": "",
                      "storeFormOpen": false,
                    },
                  }
                }
              >
                <div
                  id="serviceImgPreviewContainer"
                >
                  <div
                    className="serviceImgContainerTitle"
                  >
                    Uploaded Images
                  </div>
                  <Component
                    _id="1"
                    handleDelete={[Function]}
                    key="1"
                    url="url"
                  >
                    <div
                      className="serviceImgPreviewThumb"
                    >
                      <Image
                        as="img"
                        size="small"
                        src="url"
                        ui={true}
                      >
                        <img
                          className="ui small image"
                          src="url"
                        />
                      </Image>
                      <Icon
                        as="i"
                        className="serviceImgPreviewThumbDelete"
                        name="trash alternate"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="trash alternate icon serviceImgPreviewThumbDelete"
                          onClick={[Function]}
                        />
                      </Icon>
                    </div>
                  </Component>
                  <Component
                    _id="2"
                    handleDelete={[Function]}
                    key="2"
                    url="url"
                  >
                    <div
                      className="serviceImgPreviewThumb"
                    >
                      <Image
                        as="img"
                        size="small"
                        src="url"
                        ui={true}
                      >
                        <img
                          className="ui small image"
                          src="url"
                        />
                      </Image>
                      <Icon
                        as="i"
                        className="serviceImgPreviewThumbDelete"
                        name="trash alternate"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="trash alternate icon serviceImgPreviewThumbDelete"
                          onClick={[Function]}
                        />
                      </Icon>
                    </div>
                  </Component>
                </div>
              </ServiceImgPreviewContainer>
            </div>
          </GridColumn>
        </div>
      </GridRow>
      <ServiceImageUplForm>
        <div
          id="serviceImgUplFormHolder"
        >
          <div>
            <p>
              Image Uploader
            </p>
          </div>
          <Form
            as="form"
            id="serviceImgUploadForm"
          >
            <form
              className="ui form"
              id="serviceImgUploadForm"
              onSubmit={[Function]}
            >
              <div
                id="serviceImgInputControlls"
              >
                <Button
                  as="label"
                  content="Choose Image"
                  htmlFor="serviceImgFile"
                  icon="file"
                  id="serviceImgSelectBtn"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <label
                          class="ui icon left labeled button"
                          for="serviceImgFile"
                          id="serviceImgSelectBtn"
                          role="button"
                        >
                          <i
                            aria-hidden="true"
                            class="file icon"
                          />
                          Choose Image
                        </label>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <label
                            class="ui icon left labeled button"
                            for="serviceImgFile"
                            id="serviceImgSelectBtn"
                            role="button"
                          >
                            <i
                              aria-hidden="true"
                              class="file icon"
                            />
                            Choose Image
                          </label>,
                        }
                      }
                    >
                      <label
                        className="ui icon left labeled button"
                        htmlFor="serviceImgFile"
                        id="serviceImgSelectBtn"
                        onClick={[Function]}
                        role="button"
                      >
                        <Icon
                          as="i"
                          name="file"
                        >
                          <i
                            aria-hidden="true"
                            className="file icon"
                            onClick={[Function]}
                          />
                        </Icon>
                        Choose Image
                      </label>
                    </RefFindNode>
                  </Ref>
                </Button>
                <input
                  hidden={true}
                  id="serviceImgFile"
                  onChange={[Function]}
                  type="file"
                />
              </div>
              <span>
                No File
              </span>
            </form>
          </Form>
        </div>
      </ServiceImageUplForm>
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            computer={14}
            mobile={16}
            tablet={15}
          >
            <div
              className="fourteen wide computer sixteen wide mobile fifteen wide tablet column"
            >
              <Button
                as="button"
                content="Close Form"
                id="adminServiceFormToggleBtn"
                onClick={[Function]}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": <button
                        class="ui button"
                        id="adminServiceFormToggleBtn"
                      >
                        Close Form
                      </button>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <button
                          class="ui button"
                          id="adminServiceFormToggleBtn"
                        >
                          Close Form
                        </button>,
                      }
                    }
                  >
                    <button
                      className="ui button"
                      id="adminServiceFormToggleBtn"
                      onClick={[Function]}
                    >
                      Close Form
                    </button>
                  </RefFindNode>
                </Ref>
              </Button>
              <ServiceForm
                description="description"
                handleCreateService={[Function]}
                handleUpdateService={[Function]}
                name="name"
                newForm={false}
                price="100"
              >
                <div
                  className="serviceFormDiv"
                >
                  <Form
                    as="form"
                    id="serviceForm"
                  >
                    <form
                      className="ui form"
                      id="serviceForm"
                      onSubmit={[Function]}
                    >
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service name
                          </label>
                          <input
                            id="adminServiceFormNameInput"
                            onChange={[Function]}
                            placeholder="Service name here ..."
                            value="name"
                          />
                        </div>
                      </FormField>
                      <FormField>
                        <div
                          className="field"
                        >
                          <label>
                            Service price
                          </label>
                          <input
                            id="adminServiceFormPriceInput"
                            onChange={[Function]}
                            placeholder="Service price here..."
                            value="100"
                          />
                        </div>
                      </FormField>
                      <FormField
                        control={[Function]}
                        id="adminServiceFormDescInput"
                        label="Store Description"
                        onChange={[Function]}
                        placeholder="Service description here..."
                        value="description"
                      >
                        <div
                          className="field"
                        >
                          <label
                            htmlFor="adminServiceFormDescInput"
                          >
                            Store Description
                          </label>
                          <TextArea
                            aria-describedby={null}
                            as="textarea"
                            id="adminServiceFormDescInput"
                            onChange={[Function]}
                            placeholder="Service description here..."
                            rows={3}
                            value="description"
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <textarea
                                    id="adminServiceFormDescInput"
                                    placeholder="Service description here..."
                                    rows="3"
                                  >
                                    description
                                  </textarea>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <textarea
                                      id="adminServiceFormDescInput"
                                      placeholder="Service description here..."
                                      rows="3"
                                    >
                                      description
                                    </textarea>,
                                  }
                                }
                              >
                                <textarea
                                  aria-describedby={null}
                                  id="adminServiceFormDescInput"
                                  onChange={[Function]}
                                  onInput={[Function]}
                                  placeholder="Service description here..."
                                  rows={3}
                                  value="description"
                                />
                              </RefFindNode>
                            </Ref>
                          </TextArea>
                        </div>
                      </FormField>
                      <Button
                        as="button"
                        content="Update Service"
                        id="adminServiceFormUpdateBtn"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Ref
                          innerRef={
                            Object {
                              "current": <button
                                class="ui button"
                                id="adminServiceFormUpdateBtn"
                                type="submit"
                              >
                                Update Service
                              </button>,
                            }
                          }
                        >
                          <RefFindNode
                            innerRef={
                              Object {
                                "current": <button
                                  class="ui button"
                                  id="adminServiceFormUpdateBtn"
                                  type="submit"
                                >
                                  Update Service
                                </button>,
                              }
                            }
                          >
                            <button
                              className="ui button"
                              id="adminServiceFormUpdateBtn"
                              onClick={[Function]}
                              type="submit"
                            >
                              Update Service
                            </button>
                          </RefFindNode>
                        </Ref>
                      </Button>
                    </form>
                  </Form>
                </div>
              </ServiceForm>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </ServiceFormContainer>
</withRouter(ServiceFormContainer)>
`;
