// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServiceView Component render tests ServiceView Component default render test Should Properly render Services View 1`] = `
<div
  id="adminServiceViewHolder"
>
  <withRouter(AdminServiceMenu)
    dispatch={[Function]}
  />
  <Switch>
    <Route
      path="/admin/home/my_services/all"
    >
      <Component
        height="100px"
        width="100%"
      />
      <withRouter(ServicePreviewHolder)
        dispatch={[Function]}
        state={
          Object {
            "bonusVideoState": Object {
              "currentBonusVideoData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "vimeoURL": "",
                "youTubeURL": "",
              },
              "error": null,
              "loadedBonusVideos": Array [],
              "loading": false,
              "responseMsg": "",
            },
            "productState": Object {
              "currentProductData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "details": "",
                "images": Array [],
                "name": "",
                "price": "",
              },
              "error": null,
              "loadedProducts": Array [],
              "loading": false,
              "productFormOpen": false,
              "responseMsg": "",
            },
            "serviceState": Object {
              "currentServiceData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "images": Array [],
                "name": "",
                "price": "",
              },
              "error": null,
              "loadedServices": Array [],
              "loading": false,
              "responseMsg": "",
              "serviceFormOpen": false,
            },
            "storeItemState": Object {
              "currentStoreItemData": Object {
                "_id": "",
                "categories": Array [],
                "createdAt": "",
                "description": "",
                "details": "",
                "images": Array [],
                "name": "",
                "price": "",
                "storeId": "",
                "storeName": "",
              },
              "error": null,
              "loadedStoreItems": Array [],
              "loading": false,
              "numberOfItems": 0,
              "responseMsg": "",
              "storeItemFormOpen": false,
            },
            "storeState": Object {
              "currentStoreData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "images": Array [],
                "title": "",
              },
              "error": null,
              "loadedStores": Array [],
              "loading": false,
              "responseMsg": "",
              "storeFormOpen": false,
            },
          }
        }
      />
    </Route>
    <Route
      path="/admin/home/my_services/create"
    >
      <Component
        height="100px"
        width="100%"
      />
      <withRouter(ServiceFormHolder)
        dispatch={[Function]}
        state={
          Object {
            "bonusVideoState": Object {
              "currentBonusVideoData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "vimeoURL": "",
                "youTubeURL": "",
              },
              "error": null,
              "loadedBonusVideos": Array [],
              "loading": false,
              "responseMsg": "",
            },
            "productState": Object {
              "currentProductData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "details": "",
                "images": Array [],
                "name": "",
                "price": "",
              },
              "error": null,
              "loadedProducts": Array [],
              "loading": false,
              "productFormOpen": false,
              "responseMsg": "",
            },
            "serviceState": Object {
              "currentServiceData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "images": Array [],
                "name": "",
                "price": "",
              },
              "error": null,
              "loadedServices": Array [],
              "loading": false,
              "responseMsg": "",
              "serviceFormOpen": false,
            },
            "storeItemState": Object {
              "currentStoreItemData": Object {
                "_id": "",
                "categories": Array [],
                "createdAt": "",
                "description": "",
                "details": "",
                "images": Array [],
                "name": "",
                "price": "",
                "storeId": "",
                "storeName": "",
              },
              "error": null,
              "loadedStoreItems": Array [],
              "loading": false,
              "numberOfItems": 0,
              "responseMsg": "",
              "storeItemFormOpen": false,
            },
            "storeState": Object {
              "currentStoreData": Object {
                "_id": "",
                "createdAt": "",
                "description": "",
                "images": Array [],
                "title": "",
              },
              "error": null,
              "loadedStores": Array [],
              "loading": false,
              "responseMsg": "",
              "storeFormOpen": false,
            },
          }
        }
      />
    </Route>
    <Route
      path="/admin/home/my_services/manage"
    >
      <Component
        height="100px"
        width="100%"
      />
      <withRouter(ServiceManageHolder) />
    </Route>
  </Switch>
</div>
`;

exports[`ServiceView Component test ServiceView Component render test Should Properly render Services View 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/admin/home/my_services",
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "8rchyl",
            "pathname": "/admin/home/my_services",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "8rchyl",
          "pathname": "/admin/home/my_services",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <ServiceView>
      <div
        id="adminServiceViewHolder"
      >
        <withRouter(AdminServiceMenu)
          dispatch={[Function]}
        >
          <AdminServiceMenu
            dispatch={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "8rchyl",
                    "pathname": "/admin/home/my_services",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "8rchyl",
                  "pathname": "/admin/home/my_services",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "8rchyl",
                "pathname": "/admin/home/my_services",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <div
              className="adminServiceMenuFixed"
            >
              <Menu
                className="adminServiceMenu"
                tabular={true}
              >
                <div
                  className="ui tabular adminServiceMenu menu"
                >
                  <MenuItem
                    active={true}
                    content="View All Services"
                    name="view_all"
                    onClick={[Function]}
                  >
                    <a
                      className="active item"
                      onClick={[Function]}
                    >
                      View All Services
                    </a>
                  </MenuItem>
                  <MenuItem
                    active={false}
                    content="Create New Service"
                    name="create"
                    onClick={[Function]}
                  >
                    <a
                      className="item"
                      onClick={[Function]}
                    >
                      Create New Service
                    </a>
                  </MenuItem>
                  <MenuItem
                    active={false}
                    content="Manage Services"
                    name="manage"
                    onClick={[Function]}
                  >
                    <a
                      className="item"
                      onClick={[Function]}
                    >
                      Manage Services
                    </a>
                  </MenuItem>
                </div>
              </Menu>
            </div>
          </AdminServiceMenu>
        </withRouter(AdminServiceMenu)>
        <Switch />
      </div>
    </ServiceView>
  </Router>
</MemoryRouter>
`;
